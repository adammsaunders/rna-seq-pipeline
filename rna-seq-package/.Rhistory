knitr::opts_chunk$set(echo = FALSE)
#Install
if (!requireNamespace("devtools", quietly = TRUE))
install.packages("devtools")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
if(!require(biomaRt)) BiocManager::install("biomaRt")
if(!require(edgeR)) BiocManager::install("edgeR")
if(!require(EnhancedVolcano)) BiocManager::install('EnhancedVolcano')
if(!require(DESeq2)) BiocManager::install("DESeq2")
if(!require(GO.db)) BiocManager::install("GO.db")
if(!require(org.Ce.eg.db)) BiocManager::install("org.Ce.eg.db")
if(!require(VennDiagram)) install.packages("VennDiagram", repos = "http://cran.us.r-project.org")
if(!require(RColorBrewer)) install.packages("RColorBrewer", repos = "http://cran.us.r-project.org")
if(!require(formattable)) install.packages("formattable", repos = "http://cran.us.r-project.org")
library(edgeR)
library(biomaRt)
library(org.Ce.eg.db)
library(GO.db)
library(EnhancedVolcano)
library(DESeq2)
library(RColorBrewer)
library(VennDiagram)
library(gridExtra)
library(grid)
library(formattable)
setwd('.')
#reading in counts data, removing last 5 lines that don't contain gene counts
#GenewiseCounts <- read.table("./merged_counts.tsv", header = TRUE, row.names = 1, sep="\t", check.names = FALSE)
GenewiseCounts <- read.table("../data_qc/merged_counts.tsv", header = TRUE, row.names = 1, sep="\t", check.names = FALSE)
GenewiseCounts <- GenewiseCounts[1:(nrow(GenewiseCounts)-5),]
#setting groups
conditions <- colnames(GenewiseCounts)
group <- vector()
for (cond in conditions) {
if (grepl("_A", cond)) {
group <- append(group, "group_A")
}
else if (grepl("_B", cond)) {
group <- append(group, "group_B")
}
else if (grepl("_C", cond)) {
group <- append(group, "group_C")
}
else if (grepl("_D", cond)) {
group <- append(group, "group_D")
}
}
#determining number of pairwise comparisons
if ("group_D" %in% group) {
group_num <- 4
} else if ("group_C" %in% group) {
group_num <- 3
} else if ("group_B" %in% group) {
group_num <- 2
}
print("The number of condition groups submitted:")
print(group_num)
#removing rRNA genes from count matrix
#known rRNA genes listed in the Ensembl database
rrna <- c("WBGene00004512",
"WBGene00004513",
"WBGene00004567",
"WBGene00004622",
"WBGene00014454",
"WBGene00014472",
"WBGene00014621",
"WBGene00077465",
"WBGene00077466",
"WBGene00077467",
"WBGene00077468",
"WBGene00077469",
"WBGene00077470",
"WBGene00077471",
"WBGene00077472",
"WBGene00077473",
"WBGene00077474",
"WBGene00077475",
"WBGene00077476",
"WBGene00077477",
"WBGene00189966",
"WBGene00235197")
rrna_df <- data.frame(rrna)
merged_df <- merge(GenewiseCounts, rrna_df, by.x = "row.names", by.y = "rrna")
colnames(merged_df)[1] <- "rRNA Gene Name"
print("The raw counts for known rRNA genes are outputted in the following table")
knitr::kable(merged_df, caption = "Raw rRNA Counts")
GenewiseCounts <- GenewiseCounts[!(rownames(GenewiseCounts) %in% rrna),]
#fetching gene names from biomart using ensembl id
mart <- useDataset("celegans_gene_ensembl", useMart("ensembl"))
symbol <- getBM(
filters="ensembl_gene_id",
attributes=c("ensembl_gene_id", "external_gene_name"),
values=rownames(GenewiseCounts),
mart=mart)
### FPKM
length_data <- read.table("GC_lengths.tsv", header = TRUE, row.names=1, sep="\t", check.names = FALSE)
colnames <- as.data.frame(group, conditions)
dds <- DESeqDataSetFromMatrix(countData = GenewiseCounts,
colData = colnames,
design = ~ group)
length_data$Length <- as.numeric(length_data$Length)
mcols(dds)$basepairs <- subset(length_data, select=Length)
length_data
### FPKM
length_data <- read.table("GC_lengths.tsv", header = TRUE, row.names=1, sep="\t", check.names = FALSE)
### FPKM
length_data <- read.table("GC_lengths.tsv", header = TRUE, row.names=1, sep="\t", check.names = FALSE)
nrow(length_data)
length_data <- length_data[!(rownames(length_data) %in% rrna),]
nrow(length_data)
### FPKM
length_data <- read.table("GC_lengths.tsv", header = TRUE, row.names=1, sep="\t", check.names = FALSE)
length_data <- length_data[!(rownames(length_data) %in% rrna),]
nrow(length_data)
colnames <- as.data.frame(group, conditions)
dds <- DESeqDataSetFromMatrix(countData = GenewiseCounts,
colData = colnames,
design = ~ group)
length_data$Length <- as.numeric(length_data$Length)
mcols(dds)$basepairs <- subset(length_data, select=Length)
#rowRanges(dds) <- GRangesList(list(length_data$Length))
#FPM values
fpm_data <- fpm(dds)
#FPKM values
merged_data <- merge(fpm_data, length_data, by=0, sort = TRUE)
rownames(merged_data) <- merged_data[,1]
merged_data = as.data.frame(subset(merged_data, select = -c(Row.names) ))
merged_data$Length <- merged_data$Length/1000
merged_data[,1:6]<-merged_data[,1:6]/merged_data[,7]
#swapping gene symbol in for ensembl id
row.names(merged_data) <- symbol$external_gene_name
#write out to a file the FPKM
write.table(merged_data[,1:6], file="FPKM_gene_data.tsv", sep="\t")
